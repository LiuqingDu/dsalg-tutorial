(window.webpackJsonp=window.webpackJsonp||[]).push([[28],{492:function(v,_,t){v.exports=t.p+"assets/img/image-20201222211717542.b4ba77d6.png"},493:function(v,_,t){v.exports=t.p+"assets/img/image-20201222212402348.0a394a57.png"},494:function(v,_,t){v.exports=t.p+"assets/img/image-20201222213006536.6ba634ed.png"},565:function(v,_,t){"use strict";t.r(_);var s=t(20),a=Object(s.a)({},(function(){var v=this,_=v.$createElement,s=v._self._c||_;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h1",{attrs:{id:"二叉树与-b-树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉树与-b-树"}},[v._v("#")]),v._v(" 二叉树与 B 树")]),v._v(" "),s("h2",{attrs:{id:"二叉树存在的问题"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#二叉树存在的问题"}},[v._v("#")]),v._v(" 二叉树存在的问题")]),v._v(" "),s("p",[v._v("二叉树的操作效率较高，但是也存在问题，如下图所示")]),v._v(" "),s("p",[s("img",{attrs:{src:t(492),alt:"image-20201222211717542"}})]),v._v(" "),s("p",[v._v("当二叉树的节点较少时，不会出现什么问题。但是当节点过多时（海量，如 1 亿），就会出现如下的问题：")]),v._v(" "),s("ol",[s("li",[s("p",[v._v("构建二叉树时，需要进行多次 I/O 操作")]),v._v(" "),s("p",[v._v("节点较多时，一般会存储在文件或则数据库中，进行多次 I/O 获取到所有的节点，速度有影响")])]),v._v(" "),s("li",[s("p",[v._v("会造成二叉树的高度很大，降低操作速度")])])]),v._v(" "),s("h2",{attrs:{id:"多叉树"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#多叉树"}},[v._v("#")]),v._v(" 多叉树")]),v._v(" "),s("p",[v._v("为了解决层数过多的问题，就出现了 "),s("strong",[v._v("多叉树")]),v._v("。")]),v._v(" "),s("p",[v._v("在二叉树中，每个节点有数据项，最多有两个子节点。如果允许每个节点可以有更多的数据项和更多的子节点，就是 "),s("strong",[v._v("多叉树（multiway tree）")]),v._v("。")]),v._v(" "),s("p",[v._v("多叉树也有一定的规则的，比如后面讲解的 2-3 树、2-3-4 树，就是多叉树。")]),v._v(" "),s("p",[s("strong",[v._v("多叉树通过重新组织节点，减少树的高度，对二叉树进行优化。")])]),v._v(" "),s("p",[v._v("下图则是一颗 2-3 的多叉树：")]),v._v(" "),s("p",[s("img",{attrs:{src:t(493),alt:"image-20201222212402348"}})]),v._v(" "),s("p",[v._v("2-3 的原因：如上图按节点数量来定义的。有的只有 2 个子节点，有的有 3 个子节点。")]),v._v(" "),s("h2",{attrs:{id:"b-树的基本介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#b-树的基本介绍"}},[v._v("#")]),v._v(" B 树的基本介绍")]),v._v(" "),s("p",[v._v("B 树通过重新组织节点，降低树的高度，并且减少 I/O 读写次数来提升效率。")]),v._v(" "),s("p",[s("img",{attrs:{src:t(494),alt:"image-20201222213006536"}})]),v._v(" "),s("p",[v._v("上图说明：")]),v._v(" "),s("ul",[s("li",[v._v("一个圆圈表示一个数据项")]),v._v(" "),s("li",[v._v("相连的数据项，整个表示一个节点")])]),v._v(" "),s("p",[v._v("那么它的有点如何理解呢？")]),v._v(" "),s("ul",[s("li",[s("p",[v._v("降低树的高度：")]),v._v(" "),s("p",[v._v("可以看到，一个节点中有很多数据项，就能大大减少节点数量，从而降低树的高度")])]),v._v(" "),s("li",[s("p",[v._v("减少 I/O 读写次数")]),v._v(" "),s("p",[v._v("文件系统及数据库系统的设计者利用了 "),s("strong",[v._v("磁盘预读原理")]),v._v("，"),s("strong",[v._v("将一个节点的大小设为等于一个页（通常大小为 4K）")]),v._v("，这样每个节点只需要一次 I/O 就可以完全载入。")]),v._v(" "),s("p",[v._v("这样说，你可能没有概念，举个例子：将树的度 M 设置为 1024 ，在 600 亿个元素中最多只需要 4 次 I/O 操作就可以读取到想要的元素。")]),v._v(" "),s("p",[v._v("B 树（B+ ）广泛应用于文件存储系统以及数据库系统中。")]),v._v(" "),s("p",[v._v("什么是 "),s("strong",[v._v("度")]),v._v("？")]),v._v(" "),s("ul",[s("li",[v._v("节点的度：一个节点下的子树节点个数就是 节点的度。")]),v._v(" "),s("li",[v._v("树的度：指一颗树中，节点的度最大的哪一个值。")])])])]),v._v(" "),s("p",[v._v("B 树其实就是前面所说的 "),s("strong",[v._v("多叉树")])])])}),[],!1,null,null,null);_.default=a.exports}}]);