(window.webpackJsonp=window.webpackJsonp||[]).push([[18],{512:function(v,t,_){v.exports=_.p+"assets/img/image-20210101151015156.a926927f.png"},513:function(v,t,_){v.exports=_.p+"assets/img/image-20210101151050990.52bd2bd3.png"},514:function(v,t,_){v.exports=_.p+"assets/img/image-20210101151445645.b111931f.png"},515:function(v,t,_){v.exports=_.p+"assets/img/image-20210101152209177.0ae3fbdc.png"},613:function(v,t,_){"use strict";_.r(t);var s=_(20),a=Object(s.a)({},(function(){var v=this,t=v.$createElement,s=v._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":v.$parent.slotKey}},[s("h1",{attrs:{id:"图的基本介绍"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的基本介绍"}},[v._v("#")]),v._v(" 图的基本介绍")]),v._v(" "),s("h2",{attrs:{id:"为什么要有图"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#为什么要有图"}},[v._v("#")]),v._v(" 为什么要有图？")]),v._v(" "),s("p",[v._v("前面学过的 "),s("strong",[v._v("线性表")]),v._v(" 和 "),s("strong",[v._v("树")]),v._v("：")]),v._v(" "),s("ul",[s("li",[v._v("线性表：局限于一个 "),s("strong",[v._v("直接前驱")]),v._v(" 和 一个 "),s("strong",[v._v("直接后继")]),v._v(" 的关系")]),v._v(" "),s("li",[v._v("树：只能有一个直接前驱（父节点）")])]),v._v(" "),s("p",[v._v("当我们需要表示 "),s("strong",[v._v("多对多")]),v._v(" 的关系时，就需要用到图")]),v._v(" "),s("h2",{attrs:{id:"图的举例说明"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的举例说明"}},[v._v("#")]),v._v(" 图的举例说明")]),v._v(" "),s("p",[s("img",{attrs:{src:_(512),alt:"image-20210101151015156"}})]),v._v(" "),s("p",[v._v("比如：城市交通图。他就是一个图，对应程序中的图如下所示")]),v._v(" "),s("p",[s("img",{attrs:{src:_(513),alt:"image-20210101151050990"}})]),v._v(" "),s("p",[v._v("图是一种 "),s("strong",[v._v("数据结构")]),v._v("，其中节点可以具有 "),s("strong",[v._v("零个或多个相邻元素")]),v._v("，两个节点之间的链接称为 "),s("strong",[v._v("边")]),v._v("，节点页可以称为 "),s("strong",[v._v("顶点。")])]),v._v(" "),s("h2",{attrs:{id:"图的常用概念"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#图的常用概念"}},[v._v("#")]),v._v(" 图的常用概念")]),v._v(" "),s("p",[s("img",{attrs:{src:_(514),alt:"image-20210101151445645"}})]),v._v(" "),s("ul",[s("li",[s("p",[v._v("顶点（vertex）")])]),v._v(" "),s("li",[s("p",[v._v("边（edge）")])]),v._v(" "),s("li",[s("p",[v._v("路径：路径就是一个节点到达另一个节点所经过的节点连线")]),v._v(" "),s("p",[s("code",[v._v("D -> C")]),v._v(" 的路径就有两条（针对无向图来说）：")]),v._v(" "),s("ul",[s("li",[s("code",[v._v("D → B → C")])]),v._v(" "),s("li",[s("code",[v._v("D → A → B → C")])])])]),v._v(" "),s("li",[s("p",[v._v("无向图："),s("strong",[v._v("顶点之间的连接没有方向")])]),v._v(" "),s("p",[v._v("比如上图它是一个 "),s("strong",[v._v("无向图")]),v._v("；比如 "),s("code",[v._v("A-B")]),v._v("，可以是 "),s("code",[v._v("A->B")]),v._v(" 也可以是 "),s("code",[v._v("B <- A")])])]),v._v(" "),s("li",[s("p",[v._v("有向图：顶点之间的连接是有方向的。如下图")]),v._v(" "),s("p",[s("img",{attrs:{src:"assets/image-20210101152033487.png",alt:"image-20210101152033487"}})]),v._v(" "),s("p",[v._v("那么 "),s("code",[v._v("A-B")]),v._v("，就只能是 "),s("code",[v._v("A → B")]),v._v("，而不能是 "),s("code",[v._v("B → A")])])]),v._v(" "),s("li",[s("p",[v._v("带权图：边有权值时，则叫做带权图，同时也叫 "),s("strong",[v._v("网")])]),v._v(" "),s("p",[s("img",{attrs:{src:_(515),alt:"image-20210101152209177"}})]),v._v(" "),s("p",[v._v("比如上图中，北京 到 上海这一条边上有一个数值 1463，这个可能是他的距离，这种就叫做  边带权值")])])])])}),[],!1,null,null,null);t.default=a.exports}}]);