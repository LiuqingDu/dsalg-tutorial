(window.webpackJsonp=window.webpackJsonp||[]).push([[65],{583:function(t,n,s){"use strict";s.r(n);var v=s(20),_=Object(v.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"算法空间复杂度"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#算法空间复杂度"}},[t._v("#")]),t._v(" 算法空间复杂度")]),t._v(" "),s("p",[t._v("这里只做一个简单的介绍。")]),t._v(" "),s("p",[t._v("类似于时间复杂度的讨论，一个算法的 "),s("strong",[t._v("空间复杂度（Space Complexity）")]),t._v(" 定义为："),s("strong",[t._v("该算法所耗费的存储空间，它也是问题规模 n 的函数")])]),t._v(" "),s("p",[t._v("空间复杂度是对一个算法在运行过程中 "),s("strong",[t._v("临时占用存储空间大小的度量")]),t._v("。有的算法 "),s("strong",[t._v("需要占用的临时工作单元数")]),t._v(" 与 "),s("strong",[t._v("解决问题的规模 n 有关")]),t._v("，它随着 n 的增大而增大，当 n 较大时，将占用较多的存储单元。例如：快速排序和归并排序算法就属于这种情况")]),t._v(" "),s("p",[t._v("在做算法分析时，主要讨论的是 "),s("strong",[t._v("时间复杂度")]),t._v("。从用户体验上看，更看重的是 "),s("strong",[t._v("程序执行的速度")]),t._v("。如一些缓存产品（redis、memcache） 和算法（基数排序）本质就是 "),s("strong",[t._v("用空间换时间")]),t._v("。")])])}),[],!1,null,null,null);n.default=_.exports}}]);